"""Initial migration

Revision ID: 72f36c8b1d75
Revises: 
Create Date: 2025-04-13 20:13:18.774286

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '72f36c8b1d75'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('callbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('body_template', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('retry_interval', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index('idx_callback_name', 'callbacks', ['name'], unique=False)
    op.create_index('idx_callback_url', 'callbacks', ['url'], unique=False)
    op.create_table('models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False, comment='模型代码'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='模型名称'),
    sa.Column('path', sa.String(length=255), nullable=True, comment='模型路径'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='模型描述'),
    sa.Column('nc', sa.Integer(), nullable=False, comment='模型支持的检测类别数量'),
    sa.Column('names', sa.JSON(), nullable=True, comment='模型支持的检测类别名称映射'),
    sa.Column('version', sa.String(length=50), nullable=True, comment='模型版本'),
    sa.Column('author', sa.String(length=100), nullable=True, comment='模型作者'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_models_code'), 'models', ['code'], unique=True)
    op.create_index(op.f('ix_models_id'), 'models', ['id'], unique=False)
    op.create_table('mqtt_nodes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='节点ID'),
    sa.Column('node_id', sa.String(length=100), nullable=False, comment='MQTT节点ID'),
    sa.Column('mac_address', sa.String(length=50), nullable=False, comment='节点MAC地址'),
    sa.Column('client_id', sa.String(length=100), nullable=False, comment='MQTT客户端ID'),
    sa.Column('service_type', sa.String(length=50), nullable=False, comment='服务类型'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='节点状态'),
    sa.Column('ip', sa.String(length=50), nullable=True, comment='节点IP地址'),
    sa.Column('port', sa.Integer(), nullable=True, comment='节点端口'),
    sa.Column('hostname', sa.String(length=100), nullable=True, comment='主机名'),
    sa.Column('cpu_usage', sa.Float(), nullable=True, comment='CPU使用率'),
    sa.Column('memory_usage', sa.Float(), nullable=True, comment='内存使用率'),
    sa.Column('gpu_usage', sa.Float(), nullable=True, comment='GPU使用率'),
    sa.Column('task_count', sa.Integer(), nullable=True, comment='当前任务数'),
    sa.Column('image_task_count', sa.Integer(), nullable=True, comment='当前图像任务数'),
    sa.Column('video_task_count', sa.Integer(), nullable=True, comment='当前视频任务数'),
    sa.Column('stream_task_count', sa.Integer(), nullable=True, comment='当前流任务数'),
    sa.Column('max_tasks', sa.Integer(), nullable=True, comment='最大任务数'),
    sa.Column('version', sa.String(length=50), nullable=True, comment='节点版本'),
    sa.Column('last_active', sa.DateTime(), nullable=True, comment='最后活跃时间'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('node_metadata', sa.JSON(), nullable=True, comment='元数据'),
    sa.Column('remark', sa.String(length=255), nullable=True, comment='备注'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('node_id')
    )
    op.create_index('idx_mqttnode_is_active', 'mqtt_nodes', ['is_active'], unique=False)
    op.create_index('idx_mqttnode_mac_address', 'mqtt_nodes', ['mac_address'], unique=False)
    op.create_index('idx_mqttnode_node_id', 'mqtt_nodes', ['node_id'], unique=False)
    op.create_index('idx_mqttnode_status', 'mqtt_nodes', ['status'], unique=False)
    op.create_index(op.f('ix_mqtt_nodes_mac_address'), 'mqtt_nodes', ['mac_address'], unique=True)
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(length=50), nullable=False, comment='节点IP地址'),
    sa.Column('port', sa.String(length=10), nullable=False, comment='节点端口'),
    sa.Column('service_name', sa.String(length=100), nullable=False, comment='服务名称'),
    sa.Column('service_status', sa.String(length=20), nullable=True, comment='服务状态'),
    sa.Column('image_task_count', sa.Integer(), nullable=True, comment='图像任务数量'),
    sa.Column('video_task_count', sa.Integer(), nullable=True, comment='视频任务数量'),
    sa.Column('stream_task_count', sa.Integer(), nullable=True, comment='流任务数量'),
    sa.Column('weight', sa.Integer(), nullable=True, comment='负载均衡权重'),
    sa.Column('max_tasks', sa.Integer(), nullable=True, comment='最大任务数量'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('last_heartbeat', sa.DateTime(), nullable=True, comment='最后心跳时间'),
    sa.Column('node_type', sa.String(length=50), nullable=False, comment='节点类型：edge(边缘节点)、cluster(集群节点)'),
    sa.Column('service_type', sa.Integer(), nullable=False, comment='服务类型：1-分析服务、2-模型服务、3-云服务'),
    sa.Column('cpu_usage', sa.Float(), nullable=False, comment='CPU占用率'),
    sa.Column('memory_usage', sa.Float(), nullable=False, comment='内存占用率'),
    sa.Column('gpu_usage', sa.Float(), nullable=False, comment='GPU占用率'),
    sa.Column('gpu_memory_usage', sa.Float(), nullable=False, comment='GPU显存占用率'),
    sa.Column('compute_type', sa.String(length=50), nullable=False, comment='计算类型：cpu(CPU计算边缘节点)、camera(摄像头边缘节点)、gpu(GPU计算边缘节点)、elastic(弹性集群节点)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_node_ip_port', 'nodes', ['ip', 'port'], unique=False)
    op.create_index('idx_node_service_name', 'nodes', ['service_name'], unique=False)
    op.create_index('idx_node_service_status', 'nodes', ['service_status'], unique=False)
    op.create_index('idx_node_service_type', 'nodes', ['service_type'], unique=False)
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_table('stream_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_streamgroup_name', 'stream_groups', ['name'], unique=False)
    op.create_index(op.f('ix_stream_groups_id'), 'stream_groups', ['id'], unique=False)
    op.create_table('streams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index('idx_stream_name', 'streams', ['name'], unique=False)
    op.create_index('idx_stream_status', 'streams', ['status'], unique=False)
    op.create_index('idx_stream_url', 'streams', ['url'], unique=False)
    op.create_index(op.f('ix_streams_id'), 'streams', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False, comment='任务状态: 0(未启动), 1(运行中), 2(已停止)'),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('save_result', sa.Boolean(), nullable=True, comment='是否保存结果'),
    sa.Column('save_images', sa.Boolean(), nullable=True, comment='是否保存图像结果'),
    sa.Column('analysis_interval', sa.Integer(), nullable=True, comment='分析间隔(秒)'),
    sa.Column('specific_node_id', sa.Integer(), nullable=True, comment='指定节点ID，不区分HTTP和MQTT节点'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('active_subtasks', sa.Integer(), nullable=False, comment='运行中的子任务数量'),
    sa.Column('total_subtasks', sa.Integer(), nullable=False, comment='子任务总数量'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_created_at', 'tasks', ['created_at'], unique=False)
    op.create_index('idx_task_name', 'tasks', ['name'], unique=False)
    op.create_index('idx_task_status', 'tasks', ['status'], unique=False)
    op.create_table('group_stream_association',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('stream_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['stream_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE')
    )
    op.create_index('idx_gs_group_id', 'group_stream_association', ['group_id'], unique=False)
    op.create_index('idx_gs_stream_id', 'group_stream_association', ['stream_id'], unique=False)
    op.create_table('stream_group_association',
    sa.Column('stream_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['stream_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE')
    )
    op.create_index('idx_sg_group_id', 'stream_group_association', ['group_id'], unique=False)
    op.create_index('idx_sg_stream_id', 'stream_group_association', ['stream_id'], unique=False)
    op.create_table('sub_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('analysis_task_id', sa.String(length=50), nullable=True, comment='Analysis Service的任务ID'),
    sa.Column('stream_id', sa.Integer(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True, comment='子任务名称，通常为摄像头名称+算法名称'),
    sa.Column('status', sa.Integer(), nullable=True, comment='状态: 0(未启动), 1(运行中), 2(已停止)'),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True, comment='子任务配置信息(置信度、IOU阈值、ROI设置等)'),
    sa.Column('enable_callback', sa.Boolean(), nullable=False, comment='是否启用回调'),
    sa.Column('callback_url', sa.String(length=255), nullable=True, comment='回调URL'),
    sa.Column('node_id', sa.Integer(), nullable=True, comment='节点ID'),
    sa.Column('mqtt_node_id', sa.Integer(), nullable=True, comment='MQTT节点ID'),
    sa.Column('roi_type', sa.Integer(), nullable=False, comment='ROI类型: 0-无ROI, 1-矩形, 2-多边形, 3-线段'),
    sa.Column('analysis_type', sa.String(length=50), nullable=False, comment='分析类型: detection, tracking, counting等'),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['mqtt_node_id'], ['mqtt_nodes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_subtask_model_id', 'sub_tasks', ['model_id'], unique=False)
    op.create_index('idx_subtask_mqtt_node_id', 'sub_tasks', ['mqtt_node_id'], unique=False)
    op.create_index('idx_subtask_node_id', 'sub_tasks', ['node_id'], unique=False)
    op.create_index('idx_subtask_status', 'sub_tasks', ['status'], unique=False)
    op.create_index('idx_subtask_stream_id', 'sub_tasks', ['stream_id'], unique=False)
    op.create_index('idx_subtask_task_id', 'sub_tasks', ['task_id'], unique=False)
    op.create_index(op.f('ix_sub_tasks_id'), 'sub_tasks', ['id'], unique=False)
    op.create_table('task_callback_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('callback_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['callback_id'], ['callbacks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE')
    )
    op.create_index('idx_tc_callback_id', 'task_callback_association', ['callback_id'], unique=False)
    op.create_index('idx_tc_task_id', 'task_callback_association', ['task_id'], unique=False)
    op.create_table('task_model_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE')
    )
    op.create_index('idx_tm_model_id', 'task_model_association', ['model_id'], unique=False)
    op.create_index('idx_tm_task_id', 'task_model_association', ['task_id'], unique=False)
    op.create_table('task_stream_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('stream_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE')
    )
    op.create_index('idx_ts_stream_id', 'task_stream_association', ['stream_id'], unique=False)
    op.create_index('idx_ts_task_id', 'task_stream_association', ['task_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_ts_task_id', table_name='task_stream_association')
    op.drop_index('idx_ts_stream_id', table_name='task_stream_association')
    op.drop_table('task_stream_association')
    op.drop_index('idx_tm_task_id', table_name='task_model_association')
    op.drop_index('idx_tm_model_id', table_name='task_model_association')
    op.drop_table('task_model_association')
    op.drop_index('idx_tc_task_id', table_name='task_callback_association')
    op.drop_index('idx_tc_callback_id', table_name='task_callback_association')
    op.drop_table('task_callback_association')
    op.drop_index(op.f('ix_sub_tasks_id'), table_name='sub_tasks')
    op.drop_index('idx_subtask_task_id', table_name='sub_tasks')
    op.drop_index('idx_subtask_stream_id', table_name='sub_tasks')
    op.drop_index('idx_subtask_status', table_name='sub_tasks')
    op.drop_index('idx_subtask_node_id', table_name='sub_tasks')
    op.drop_index('idx_subtask_mqtt_node_id', table_name='sub_tasks')
    op.drop_index('idx_subtask_model_id', table_name='sub_tasks')
    op.drop_table('sub_tasks')
    op.drop_index('idx_sg_stream_id', table_name='stream_group_association')
    op.drop_index('idx_sg_group_id', table_name='stream_group_association')
    op.drop_table('stream_group_association')
    op.drop_index('idx_gs_stream_id', table_name='group_stream_association')
    op.drop_index('idx_gs_group_id', table_name='group_stream_association')
    op.drop_table('group_stream_association')
    op.drop_index('idx_task_status', table_name='tasks')
    op.drop_index('idx_task_name', table_name='tasks')
    op.drop_index('idx_task_created_at', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_streams_id'), table_name='streams')
    op.drop_index('idx_stream_url', table_name='streams')
    op.drop_index('idx_stream_status', table_name='streams')
    op.drop_index('idx_stream_name', table_name='streams')
    op.drop_table('streams')
    op.drop_index(op.f('ix_stream_groups_id'), table_name='stream_groups')
    op.drop_index('idx_streamgroup_name', table_name='stream_groups')
    op.drop_table('stream_groups')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_index('idx_node_service_type', table_name='nodes')
    op.drop_index('idx_node_service_status', table_name='nodes')
    op.drop_index('idx_node_service_name', table_name='nodes')
    op.drop_index('idx_node_ip_port', table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_mqtt_nodes_mac_address'), table_name='mqtt_nodes')
    op.drop_index('idx_mqttnode_status', table_name='mqtt_nodes')
    op.drop_index('idx_mqttnode_node_id', table_name='mqtt_nodes')
    op.drop_index('idx_mqttnode_mac_address', table_name='mqtt_nodes')
    op.drop_index('idx_mqttnode_is_active', table_name='mqtt_nodes')
    op.drop_table('mqtt_nodes')
    op.drop_index(op.f('ix_models_id'), table_name='models')
    op.drop_index(op.f('ix_models_code'), table_name='models')
    op.drop_table('models')
    op.drop_index('idx_callback_url', table_name='callbacks')
    op.drop_index('idx_callback_name', table_name='callbacks')
    op.drop_table('callbacks')
    # ### end Alembic commands ###
